version: '3.1'

services:

  ### mongodb-server => mode produtions
  mongodb-configsys:
    container_name: mongodb-configsys
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - network_confsys
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSOWORD}


  ### Mongo Express Server configuration  -> mode development
  mongodbongo-express:
    container_name: mongodbongo-express
    depends_on:
      - mongodb-configsys
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: ${MONGODB_URI_DOCKER}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSOWORD}


  # ### Mongo Express Server configuration  -> mode development
  # backend:
  #   container_name: backend-configsys
  #   depends_on:
  #     - mongodb-configsys
  #   environment:
  #     MONGODB_URI: ${NEXT_PUBLIC_URL_DEFAULT_BACKEND}
  #     MONGODB_DEVICES: ${MONGODB_DEVICES_BACKEND}
  #     MONGODB_DB: ${MONGODB_DB_BACKEND}
  #     PORT_WEB_BACKEND: ${PORT_WEB_BACKEND_ENV}
  #     JWT_SECRET_BACKEND: ${JWT_SECRET_BACKEND_ENV}
  #   networks:
  #     - network_confsys
  #   restart: always


  # frontend:
  #   container_name: frontend-configsys
  #   depends_on:
  #     - backend
  #   networks:
  #     - network_confsys
  #   environment:
  #     NEXT_PUBLIC_URL_DEFAULT: ${NEXT_PUBLIC_URL_DEFAULT_ENV}
  #   restart: always


#  demo:
#    container_name: frontend-configsys
#    networks:
#       - network_confsys
#    environment:
#      NEXT_PUBLIC_URL_DEFAULT: ${NEXT_PUBLIC_URL_DEFAULT_ENV}
#    restart: always



networks:
  network_confsys:

volumes:
  mongodb_data_container:
  backend_log_container:
  backend_files_container:
